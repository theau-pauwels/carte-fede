---
import Layout from "../../layouts/Layout.astro";
---
<Layout title="Gestion des utilisateurs">
  <h1>Gestion des utilisateurs</h1>
  <p><a href="/admin" class="btn">← Admin</a></p>

  <table id="tbl">
    <thead>
      <tr>
        <th>Nom</th>
        <th>Prénom</th>
        <th>Identifiant</th>
        <th>Cartes (année → n°)</th>
        <th>Ajouter une carte</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
</Layout>

<script>
  async function ensureAdmin() {
    const me = await fetch('/api/me', { credentials: 'include' });
    if (!me.ok) { location.href = '/login?next=' + encodeURIComponent(location.pathname); return false; }
    const j = await me.json();
    if (j.role !== 'admin') { location.href = '/'; return false; }
    return true;
  }

  async function fetchUsers() {
    const res = await fetch('/api/admin/users', { credentials: 'include' });
    if (!res.ok) throw new Error('HTTP '+res.status);
    return res.json();
  }

  function render(users) {
    const tb = document.querySelector('#tbl tbody');
    const fmtCartes = (cartes) => {
      const entries = Object.entries(cartes || {});
      if (!entries.length) return '<span class="muted">—</span>';
      entries.sort((a,b)=>Number(b[0])-Number(a[0]));
      return entries.map(([y,c]) => `${y} → ${c}`).join('<br/>');
    };
    tb.innerHTML = users.map(u => `
      <tr>
        <td>${u.nom}</td>
        <td>${u.prenom}</td>
        <td>${u.identifiant ?? ''}</td>
        <td>${fmtCartes(u.cartes)}</td>
        <td>
          <form class="inline form-carte" data-user="${u.id}">
            <input type="number" name="annee" placeholder="Année" required min="1900" max="2100"/>
            <input type="text" name="annee_code" placeholder="Numéro" required />
            <button type="submit">➕</button>
          </form>
        </td>
      </tr>
    `).join('');

    document.querySelectorAll('.form-carte').forEach(f => {
      f.addEventListener('submit', async (e) => {
        e.preventDefault();
        const userId = f.dataset.user;
        const data = Object.fromEntries(new FormData(f).entries());
        data.annee = Number(data.annee);

        const r = await fetch(`/api/admin/users/${userId}/annees`, {
          method:'PUT',
          headers:{'Content-Type':'application/json'},
          credentials:'include',
          body: JSON.stringify(data)
        });
        if (!r.ok) {
          let msg = 'Erreur '+r.status;
          try { const j=await r.json(); if (j.error) msg=j.error; } catch {}
          alert(msg);
          return;
        }
        // Refresh table
        const users = await fetchUsers();
        render(users);
      });
    });
  }

  (async () => {
    if (!await ensureAdmin()) return;
    try {
      render(await fetchUsers());
    } catch (e) {
      alert('Chargement impossible: '+e.message);
    }
  })();
</script>
